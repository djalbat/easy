"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _eventTypes = require("../eventTypes");
function onMouseUp(mouseUpHandler, element) {
    this.onEvent(_eventTypes.MOUSEUP_EVENT_TYPE, mouseUpHandler, element);
}
function offMouseUp(mouseUpHandler, element) {
    this.offEvent(_eventTypes.MOUSEUP_EVENT_TYPE, mouseUpHandler, element);
}
function onMouseOut(mouseOutHandler, element) {
    this.onEvent(_eventTypes.MOUSEOUT_EVENT_TYPE, mouseOutHandler, element);
}
function offMouseOut(mouseOutHandler, element) {
    this.offEvent(_eventTypes.MOUSEOUT_EVENT_TYPE, mouseOutHandler, element);
}
function onMouseDown(mouseDownHandler, element) {
    this.onEvent(_eventTypes.MOUSEDOWN_EVENT_TYPE, mouseDownHandler, element);
}
function offMouseDown(mouseDownHandler, element) {
    this.offEvent(_eventTypes.MOUSEDOWN_EVENT_TYPE, mouseDownHandler, element);
}
function onMouseOver(mouseOverHandler, element) {
    this.onEvent(_eventTypes.MOUSEOVER_EVENT_TYPE, mouseOverHandler, element);
}
function offMouseOver(mouseOverHandler, element) {
    this.offEvent(_eventTypes.MOUSEOVER_EVENT_TYPE, mouseOverHandler, element);
}
function onMouseMove(mouseMoveHandler, element) {
    this.onEvent(_eventTypes.MOUSEMOVE_EVENT_TYPE, mouseMoveHandler, element);
}
function offMouseMove(mouseMoveHandler, element) {
    this.offEvent(_eventTypes.MOUSEMOVE_EVENT_TYPE, mouseMoveHandler, element);
}
var mouseMixins = {
    onMouseUp: onMouseUp,
    offMouseUp: offMouseUp,
    onMouseOut: onMouseOut,
    offMouseOut: offMouseOut,
    onMouseDown: onMouseDown,
    offMouseDown: offMouseDown,
    onMouseOver: onMouseOver,
    offMouseOver: offMouseOver,
    onMouseMove: onMouseMove,
    offMouseMove: offMouseMove
};
var _default = mouseMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvbW91c2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IE1PVVNFVVBfRVZFTlRfVFlQRSxcbiAgICAgICAgIE1PVVNFT1VUX0VWRU5UX1RZUEUsXG4gICAgICAgICBNT1VTRURPV05fRVZFTlRfVFlQRSxcbiAgICAgICAgIE1PVVNFT1ZFUl9FVkVOVF9UWVBFLFxuICAgICAgICAgTU9VU0VNT1ZFX0VWRU5UX1RZUEUgfSBmcm9tIFwiLi4vZXZlbnRUeXBlc1wiO1xuXG5mdW5jdGlvbiBvbk1vdXNlVXAobW91c2VVcEhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vbkV2ZW50KE1PVVNFVVBfRVZFTlRfVFlQRSwgbW91c2VVcEhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9mZk1vdXNlVXAobW91c2VVcEhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmZFdmVudChNT1VTRVVQX0VWRU5UX1RZUEUsIG1vdXNlVXBIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvbk1vdXNlT3V0KG1vdXNlT3V0SGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9uRXZlbnQoTU9VU0VPVVRfRVZFTlRfVFlQRSwgbW91c2VPdXRIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZU91dChtb3VzZU91dEhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmZFdmVudChNT1VTRU9VVF9FVkVOVF9UWVBFLCBtb3VzZU91dEhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9uTW91c2VEb3duKG1vdXNlRG93bkhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vbkV2ZW50KE1PVVNFRE9XTl9FVkVOVF9UWVBFLCBtb3VzZURvd25IYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZURvd24obW91c2VEb3duSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZkV2ZW50KE1PVVNFRE9XTl9FVkVOVF9UWVBFLCBtb3VzZURvd25IYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvbk1vdXNlT3Zlcihtb3VzZU92ZXJIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub25FdmVudChNT1VTRU9WRVJfRVZFTlRfVFlQRSwgbW91c2VPdmVySGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VPdmVyKG1vdXNlT3ZlckhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmZFdmVudChNT1VTRU9WRVJfRVZFTlRfVFlQRSwgbW91c2VPdmVySGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb25Nb3VzZU1vdmUobW91c2VNb3ZlSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9uRXZlbnQoTU9VU0VNT1ZFX0VWRU5UX1RZUEUsIG1vdXNlTW92ZUhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9mZk1vdXNlTW92ZShtb3VzZU1vdmVIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub2ZmRXZlbnQoTU9VU0VNT1ZFX0VWRU5UX1RZUEUsIG1vdXNlTW92ZUhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmNvbnN0IG1vdXNlTWl4aW5zID0ge1xuICBvbk1vdXNlVXAsXG4gIG9mZk1vdXNlVXAsXG4gIG9uTW91c2VPdXQsXG4gIG9mZk1vdXNlT3V0LFxuICBvbk1vdXNlRG93bixcbiAgb2ZmTW91c2VEb3duLFxuICBvbk1vdXNlT3ZlcixcbiAgb2ZmTW91c2VPdmVyLFxuICBvbk1vdXNlTW92ZSxcbiAgb2ZmTW91c2VNb3ZlXG59O1xuXG5leHBvcnQgZGVmYXVsdCBtb3VzZU1peGlucztcbiJdLCJuYW1lcyI6WyJvbk1vdXNlVXAiLCJtb3VzZVVwSGFuZGxlciIsImVsZW1lbnQiLCJvbkV2ZW50IiwiTU9VU0VVUF9FVkVOVF9UWVBFIiwib2ZmTW91c2VVcCIsIm9mZkV2ZW50Iiwib25Nb3VzZU91dCIsIm1vdXNlT3V0SGFuZGxlciIsIk1PVVNFT1VUX0VWRU5UX1RZUEUiLCJvZmZNb3VzZU91dCIsIm9uTW91c2VEb3duIiwibW91c2VEb3duSGFuZGxlciIsIk1PVVNFRE9XTl9FVkVOVF9UWVBFIiwib2ZmTW91c2VEb3duIiwib25Nb3VzZU92ZXIiLCJtb3VzZU92ZXJIYW5kbGVyIiwiTU9VU0VPVkVSX0VWRU5UX1RZUEUiLCJvZmZNb3VzZU92ZXIiLCJvbk1vdXNlTW92ZSIsIm1vdXNlTW92ZUhhbmRsZXIiLCJNT1VTRU1PVkVfRVZFTlRfVFlQRSIsIm9mZk1vdXNlTW92ZSIsIm1vdXNlTWl4aW5zIl0sIm1hcHBpbmdzIjoiQUFBQTs7OzsrQkF5Q0E7OztlQUFBOzs7MEJBbkNxQztBQUVyQyxTQUFTQSxVQUFVQyxjQUFjLEVBQUVDLE9BQU87SUFBSSxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsOEJBQWtCLEVBQUVILGdCQUFnQkM7QUFBVTtBQUV6RyxTQUFTRyxXQUFXSixjQUFjLEVBQUVDLE9BQU87SUFBSSxJQUFJLENBQUNJLFFBQVEsQ0FBQ0YsOEJBQWtCLEVBQUVILGdCQUFnQkM7QUFBVTtBQUUzRyxTQUFTSyxXQUFXQyxlQUFlLEVBQUVOLE9BQU87SUFBSSxJQUFJLENBQUNDLE9BQU8sQ0FBQ00sK0JBQW1CLEVBQUVELGlCQUFpQk47QUFBVTtBQUU3RyxTQUFTUSxZQUFZRixlQUFlLEVBQUVOLE9BQU87SUFBSSxJQUFJLENBQUNJLFFBQVEsQ0FBQ0csK0JBQW1CLEVBQUVELGlCQUFpQk47QUFBVTtBQUUvRyxTQUFTUyxZQUFZQyxnQkFBZ0IsRUFBRVYsT0FBTztJQUFJLElBQUksQ0FBQ0MsT0FBTyxDQUFDVSxnQ0FBb0IsRUFBRUQsa0JBQWtCVjtBQUFVO0FBRWpILFNBQVNZLGFBQWFGLGdCQUFnQixFQUFFVixPQUFPO0lBQUksSUFBSSxDQUFDSSxRQUFRLENBQUNPLGdDQUFvQixFQUFFRCxrQkFBa0JWO0FBQVU7QUFFbkgsU0FBU2EsWUFBWUMsZ0JBQWdCLEVBQUVkLE9BQU87SUFBSSxJQUFJLENBQUNDLE9BQU8sQ0FBQ2MsZ0NBQW9CLEVBQUVELGtCQUFrQmQ7QUFBVTtBQUVqSCxTQUFTZ0IsYUFBYUYsZ0JBQWdCLEVBQUVkLE9BQU87SUFBSSxJQUFJLENBQUNJLFFBQVEsQ0FBQ1csZ0NBQW9CLEVBQUVELGtCQUFrQmQ7QUFBVTtBQUVuSCxTQUFTaUIsWUFBWUMsZ0JBQWdCLEVBQUVsQixPQUFPO0lBQUksSUFBSSxDQUFDQyxPQUFPLENBQUNrQixnQ0FBb0IsRUFBRUQsa0JBQWtCbEI7QUFBVTtBQUVqSCxTQUFTb0IsYUFBYUYsZ0JBQWdCLEVBQUVsQixPQUFPO0lBQUksSUFBSSxDQUFDSSxRQUFRLENBQUNlLGdDQUFvQixFQUFFRCxrQkFBa0JsQjtBQUFVO0FBRW5ILElBQU1xQixjQUFjO0lBQ2xCdkIsV0FBQUE7SUFDQUssWUFBQUE7SUFDQUUsWUFBQUE7SUFDQUcsYUFBQUE7SUFDQUMsYUFBQUE7SUFDQUcsY0FBQUE7SUFDQUMsYUFBQUE7SUFDQUcsY0FBQUE7SUFDQUMsYUFBQUE7SUFDQUcsY0FBQUE7QUFDRjtJQUVBLFdBQWVDIn0=