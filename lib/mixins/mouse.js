"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _constants = require("../constants");
function onMouseUp(mouseUpHandler, element) {
    this.on(_constants.MOUSEUP, mouseUpHandler, element);
}
function offMouseUp(mouseUpHandler, element) {
    this.off(_constants.MOUSEUP, mouseUpHandler, element);
}
function onMouseOut(mouseOutHandler, element) {
    this.on(_constants.MOUSEOUT, mouseOutHandler, element);
}
function offMouseOut(mouseOutHandler, element) {
    this.off(_constants.MOUSEOUT, mouseOutHandler, element);
}
function onMouseDown(mouseDownHandler, element) {
    this.on(_constants.MOUSEDOWN, mouseDownHandler, element);
}
function offMouseDown(mouseDownHandler, element) {
    this.off(_constants.MOUSEDOWN, mouseDownHandler, element);
}
function onMouseOver(mouseOverHandler, element) {
    this.on(_constants.MOUSEOVER, mouseOverHandler, element);
}
function offMouseOver(mouseOverHandler, element) {
    this.off(_constants.MOUSEOVER, mouseOverHandler, element);
}
function onMouseMove(mouseMoveHandler, element) {
    this.on(_constants.MOUSEMOVE, mouseMoveHandler, element);
}
function offMouseMove(mouseMoveHandler, element) {
    this.off(_constants.MOUSEMOVE, mouseMoveHandler, element);
}
var mouseMixins = {
    onMouseUp: onMouseUp,
    offMouseUp: offMouseUp,
    onMouseOut: onMouseOut,
    offMouseOut: offMouseOut,
    onMouseDown: onMouseDown,
    offMouseDown: offMouseDown,
    onMouseOver: onMouseOver,
    offMouseOver: offMouseOver,
    onMouseMove: onMouseMove,
    offMouseMove: offMouseMove
};
var _default = mouseMixins;
exports.default = _default;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvbW91c2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IE1PVVNFVVAsIE1PVVNFT1VULCBNT1VTRURPV04sIE1PVVNFT1ZFUiwgTU9VU0VNT1ZFIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuXG5mdW5jdGlvbiBvbk1vdXNlVXAobW91c2VVcEhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vbihNT1VTRVVQLCBtb3VzZVVwSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VVcChtb3VzZVVwSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZihNT1VTRVVQLCBtb3VzZVVwSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb25Nb3VzZU91dChtb3VzZU91dEhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vbihNT1VTRU9VVCwgbW91c2VPdXRIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZU91dChtb3VzZU91dEhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmYoTU9VU0VPVVQsIG1vdXNlT3V0SGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb25Nb3VzZURvd24obW91c2VEb3duSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9uKE1PVVNFRE9XTiwgbW91c2VEb3duSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VEb3duKG1vdXNlRG93bkhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmYoTU9VU0VET1dOLCBtb3VzZURvd25IYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvbk1vdXNlT3Zlcihtb3VzZU92ZXJIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub24oTU9VU0VPVkVSLCBtb3VzZU92ZXJIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZU92ZXIobW91c2VPdmVySGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZihNT1VTRU9WRVIsIG1vdXNlT3ZlckhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9uTW91c2VNb3ZlKG1vdXNlTW92ZUhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vbihNT1VTRU1PVkUsIG1vdXNlTW92ZUhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9mZk1vdXNlTW92ZShtb3VzZU1vdmVIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub2ZmKE1PVVNFTU9WRSwgbW91c2VNb3ZlSGFuZGxlciwgZWxlbWVudCk7IH1cblxuY29uc3QgbW91c2VNaXhpbnMgPSB7XG4gIG9uTW91c2VVcCxcbiAgb2ZmTW91c2VVcCxcbiAgb25Nb3VzZU91dCxcbiAgb2ZmTW91c2VPdXQsXG4gIG9uTW91c2VEb3duLFxuICBvZmZNb3VzZURvd24sXG4gIG9uTW91c2VPdmVyLFxuICBvZmZNb3VzZU92ZXIsXG4gIG9uTW91c2VNb3ZlLFxuICBvZmZNb3VzZU1vdmVcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1vdXNlTWl4aW5zO1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJDQUFBLFVBQVk7Ozs7O0lBRXVELFVBQWM7U0FFeEUsU0FBUyxDQUFDLGNBQWMsRUFBRSxPQUFPO1NBQVMsRUFBRSxDQUZjLFVBQWMsVUFFbEIsY0FBYyxFQUFFLE9BQU87O1NBRTdFLFVBQVUsQ0FBQyxjQUFjLEVBQUUsT0FBTztTQUFTLEdBQUcsQ0FKWSxVQUFjLFVBSWhCLGNBQWMsRUFBRSxPQUFPOztTQUUvRSxVQUFVLENBQUMsZUFBZSxFQUFFLE9BQU87U0FBUyxFQUFFLENBTlksVUFBYyxXQU1mLGVBQWUsRUFBRSxPQUFPOztTQUVqRixXQUFXLENBQUMsZUFBZSxFQUFFLE9BQU87U0FBUyxHQUFHLENBUlUsVUFBYyxXQVFiLGVBQWUsRUFBRSxPQUFPOztTQUVuRixXQUFXLENBQUMsZ0JBQWdCLEVBQUUsT0FBTztTQUFTLEVBQUUsQ0FWVSxVQUFjLFlBVVosZ0JBQWdCLEVBQUUsT0FBTzs7U0FFckYsWUFBWSxDQUFDLGdCQUFnQixFQUFFLE9BQU87U0FBUyxHQUFHLENBWlEsVUFBYyxZQVlWLGdCQUFnQixFQUFFLE9BQU87O1NBRXZGLFdBQVcsQ0FBQyxnQkFBZ0IsRUFBRSxPQUFPO1NBQVMsRUFBRSxDQWRVLFVBQWMsWUFjWixnQkFBZ0IsRUFBRSxPQUFPOztTQUVyRixZQUFZLENBQUMsZ0JBQWdCLEVBQUUsT0FBTztTQUFTLEdBQUcsQ0FoQlEsVUFBYyxZQWdCVixnQkFBZ0IsRUFBRSxPQUFPOztTQUV2RixXQUFXLENBQUMsZ0JBQWdCLEVBQUUsT0FBTztTQUFTLEVBQUUsQ0FsQlUsVUFBYyxZQWtCWixnQkFBZ0IsRUFBRSxPQUFPOztTQUVyRixZQUFZLENBQUMsZ0JBQWdCLEVBQUUsT0FBTztTQUFTLEdBQUcsQ0FwQlEsVUFBYyxZQW9CVixnQkFBZ0IsRUFBRSxPQUFPOztJQUUxRixXQUFXO0lBQ2YsU0FBUyxFQUFULFNBQVM7SUFDVCxVQUFVLEVBQVYsVUFBVTtJQUNWLFVBQVUsRUFBVixVQUFVO0lBQ1YsV0FBVyxFQUFYLFdBQVc7SUFDWCxXQUFXLEVBQVgsV0FBVztJQUNYLFlBQVksRUFBWixZQUFZO0lBQ1osV0FBVyxFQUFYLFdBQVc7SUFDWCxZQUFZLEVBQVosWUFBWTtJQUNaLFdBQVcsRUFBWCxXQUFXO0lBQ1gsWUFBWSxFQUFaLFlBQVk7O2VBR0MsV0FBVyJ9