"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _eventTypes = require("../eventTypes");
function onMouseUp(mouseUpHandler, element) {
    this.onEvent(_eventTypes.MOUSEUP_EVENT_TYPE, mouseUpHandler, element);
}
function offMouseUp(mouseUpHandler, element) {
    this.offEvent(_eventTypes.MOUSEUP_EVENT_TYPE, mouseUpHandler, element);
}
function onMouseOut(mouseOutHandler, element) {
    this.onEvent(_eventTypes.MOUSEOUT_EVENT_TYPE, mouseOutHandler, element);
}
function offMouseOut(mouseOutHandler, element) {
    this.offEvent(_eventTypes.MOUSEOUT_EVENT_TYPE, mouseOutHandler, element);
}
function onMouseDown(mouseDownHandler, element) {
    this.onEvent(_eventTypes.MOUSEDOWN_EVENT_TYPE, mouseDownHandler, element);
}
function offMouseDown(mouseDownHandler, element) {
    this.offEvent(_eventTypes.MOUSEDOWN_EVENT_TYPE, mouseDownHandler, element);
}
function onMouseOver(mouseOverHandler, element) {
    this.onEvent(_eventTypes.MOUSEOVER_EVENT_TYPE, mouseOverHandler, element);
}
function offMouseOver(mouseOverHandler, element) {
    this.offEvent(_eventTypes.MOUSEOVER_EVENT_TYPE, mouseOverHandler, element);
}
function onMouseMove(mouseMoveHandler, element) {
    this.onEvent(_eventTypes.MOUSEMOVE_EVENT_TYPE, mouseMoveHandler, element);
}
function offMouseMove(mouseMoveHandler, element) {
    this.offEvent(_eventTypes.MOUSEMOVE_EVENT_TYPE, mouseMoveHandler, element);
}
var mouseMixins = {
    onMouseUp: onMouseUp,
    offMouseUp: offMouseUp,
    onMouseOut: onMouseOut,
    offMouseOut: offMouseOut,
    onMouseDown: onMouseDown,
    offMouseDown: offMouseDown,
    onMouseOver: onMouseOver,
    offMouseOver: offMouseOver,
    onMouseMove: onMouseMove,
    offMouseMove: offMouseMove
};
var _default = mouseMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvbW91c2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IE1PVVNFVVBfRVZFTlRfVFlQRSwgTU9VU0VPVVRfRVZFTlRfVFlQRSwgTU9VU0VET1dOX0VWRU5UX1RZUEUsIE1PVVNFT1ZFUl9FVkVOVF9UWVBFLCBNT1VTRU1PVkVfRVZFTlRfVFlQRSB9IGZyb20gXCIuLi9ldmVudFR5cGVzXCI7XG5cbmZ1bmN0aW9uIG9uTW91c2VVcChtb3VzZVVwSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9uRXZlbnQoTU9VU0VVUF9FVkVOVF9UWVBFLCBtb3VzZVVwSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VVcChtb3VzZVVwSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZkV2ZW50KE1PVVNFVVBfRVZFTlRfVFlQRSwgbW91c2VVcEhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9uTW91c2VPdXQobW91c2VPdXRIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub25FdmVudChNT1VTRU9VVF9FVkVOVF9UWVBFLCBtb3VzZU91dEhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9mZk1vdXNlT3V0KG1vdXNlT3V0SGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZkV2ZW50KE1PVVNFT1VUX0VWRU5UX1RZUEUsIG1vdXNlT3V0SGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb25Nb3VzZURvd24obW91c2VEb3duSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9uRXZlbnQoTU9VU0VET1dOX0VWRU5UX1RZUEUsIG1vdXNlRG93bkhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9mZk1vdXNlRG93bihtb3VzZURvd25IYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub2ZmRXZlbnQoTU9VU0VET1dOX0VWRU5UX1RZUEUsIG1vdXNlRG93bkhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9uTW91c2VPdmVyKG1vdXNlT3ZlckhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vbkV2ZW50KE1PVVNFT1ZFUl9FVkVOVF9UWVBFLCBtb3VzZU92ZXJIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZU92ZXIobW91c2VPdmVySGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZkV2ZW50KE1PVVNFT1ZFUl9FVkVOVF9UWVBFLCBtb3VzZU92ZXJIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvbk1vdXNlTW92ZShtb3VzZU1vdmVIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub25FdmVudChNT1VTRU1PVkVfRVZFTlRfVFlQRSwgbW91c2VNb3ZlSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VNb3ZlKG1vdXNlTW92ZUhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmZFdmVudChNT1VTRU1PVkVfRVZFTlRfVFlQRSwgbW91c2VNb3ZlSGFuZGxlciwgZWxlbWVudCk7IH1cblxuY29uc3QgbW91c2VNaXhpbnMgPSB7XG4gIG9uTW91c2VVcCxcbiAgb2ZmTW91c2VVcCxcbiAgb25Nb3VzZU91dCxcbiAgb2ZmTW91c2VPdXQsXG4gIG9uTW91c2VEb3duLFxuICBvZmZNb3VzZURvd24sXG4gIG9uTW91c2VPdmVyLFxuICBvZmZNb3VzZU92ZXIsXG4gIG9uTW91c2VNb3ZlLFxuICBvZmZNb3VzZU1vdmVcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1vdXNlTWl4aW5zO1xuIl0sIm5hbWVzIjpbIm9uTW91c2VVcCIsIm1vdXNlVXBIYW5kbGVyIiwiZWxlbWVudCIsIm9uRXZlbnQiLCJNT1VTRVVQX0VWRU5UX1RZUEUiLCJvZmZNb3VzZVVwIiwib2ZmRXZlbnQiLCJvbk1vdXNlT3V0IiwibW91c2VPdXRIYW5kbGVyIiwiTU9VU0VPVVRfRVZFTlRfVFlQRSIsIm9mZk1vdXNlT3V0Iiwib25Nb3VzZURvd24iLCJtb3VzZURvd25IYW5kbGVyIiwiTU9VU0VET1dOX0VWRU5UX1RZUEUiLCJvZmZNb3VzZURvd24iLCJvbk1vdXNlT3ZlciIsIm1vdXNlT3ZlckhhbmRsZXIiLCJNT1VTRU9WRVJfRVZFTlRfVFlQRSIsIm9mZk1vdXNlT3ZlciIsIm9uTW91c2VNb3ZlIiwibW91c2VNb3ZlSGFuZGxlciIsIk1PVVNFTU9WRV9FVkVOVF9UWVBFIiwib2ZmTW91c2VNb3ZlIiwibW91c2VNaXhpbnMiXSwibWFwcGluZ3MiOiJBQUFBOzs7OytCQXFDQTs7O2VBQUE7OzswQkFuQzBIO0FBRTFILFNBQVNBLFVBQVVDLGNBQWMsRUFBRUMsT0FBTztJQUFJLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyw4QkFBa0IsRUFBRUgsZ0JBQWdCQztBQUFVO0FBRXpHLFNBQVNHLFdBQVdKLGNBQWMsRUFBRUMsT0FBTztJQUFJLElBQUksQ0FBQ0ksUUFBUSxDQUFDRiw4QkFBa0IsRUFBRUgsZ0JBQWdCQztBQUFVO0FBRTNHLFNBQVNLLFdBQVdDLGVBQWUsRUFBRU4sT0FBTztJQUFJLElBQUksQ0FBQ0MsT0FBTyxDQUFDTSwrQkFBbUIsRUFBRUQsaUJBQWlCTjtBQUFVO0FBRTdHLFNBQVNRLFlBQVlGLGVBQWUsRUFBRU4sT0FBTztJQUFJLElBQUksQ0FBQ0ksUUFBUSxDQUFDRywrQkFBbUIsRUFBRUQsaUJBQWlCTjtBQUFVO0FBRS9HLFNBQVNTLFlBQVlDLGdCQUFnQixFQUFFVixPQUFPO0lBQUksSUFBSSxDQUFDQyxPQUFPLENBQUNVLGdDQUFvQixFQUFFRCxrQkFBa0JWO0FBQVU7QUFFakgsU0FBU1ksYUFBYUYsZ0JBQWdCLEVBQUVWLE9BQU87SUFBSSxJQUFJLENBQUNJLFFBQVEsQ0FBQ08sZ0NBQW9CLEVBQUVELGtCQUFrQlY7QUFBVTtBQUVuSCxTQUFTYSxZQUFZQyxnQkFBZ0IsRUFBRWQsT0FBTztJQUFJLElBQUksQ0FBQ0MsT0FBTyxDQUFDYyxnQ0FBb0IsRUFBRUQsa0JBQWtCZDtBQUFVO0FBRWpILFNBQVNnQixhQUFhRixnQkFBZ0IsRUFBRWQsT0FBTztJQUFJLElBQUksQ0FBQ0ksUUFBUSxDQUFDVyxnQ0FBb0IsRUFBRUQsa0JBQWtCZDtBQUFVO0FBRW5ILFNBQVNpQixZQUFZQyxnQkFBZ0IsRUFBRWxCLE9BQU87SUFBSSxJQUFJLENBQUNDLE9BQU8sQ0FBQ2tCLGdDQUFvQixFQUFFRCxrQkFBa0JsQjtBQUFVO0FBRWpILFNBQVNvQixhQUFhRixnQkFBZ0IsRUFBRWxCLE9BQU87SUFBSSxJQUFJLENBQUNJLFFBQVEsQ0FBQ2UsZ0NBQW9CLEVBQUVELGtCQUFrQmxCO0FBQVU7QUFFbkgsSUFBTXFCLGNBQWM7SUFDbEJ2QixXQUFBQTtJQUNBSyxZQUFBQTtJQUNBRSxZQUFBQTtJQUNBRyxhQUFBQTtJQUNBQyxhQUFBQTtJQUNBRyxjQUFBQTtJQUNBQyxhQUFBQTtJQUNBRyxjQUFBQTtJQUNBQyxhQUFBQTtJQUNBRyxjQUFBQTtBQUNGO0lBRUEsV0FBZUMifQ==