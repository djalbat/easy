"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _eventTypes = require("../eventTypes");
function onCut(cutHandler, element) {
    this.onEvent(_eventTypes.CUT_EVENT_TYPE, cutHandler, element);
}
function offCut(cutHandler, element) {
    this.offEvent(_eventTypes.CUT_EVENT_TYPE, cutHandler, element);
}
function onCopy(copyHandler, element) {
    this.onEvent(_eventTypes.COPY_EVENT_TYPE, copyHandler, element);
}
function offCopy(copyHandler, element) {
    this.offEvent(_eventTypes.COPY_EVENT_TYPE, copyHandler, element);
}
function onPaste(pasteHandler, element) {
    this.onEvent(_eventTypes.PASTE_EVENT_TYPE, pasteHandler, element);
}
function offPaste(pasteHandler, element) {
    this.offEvent(_eventTypes.PASTE_EVENT_TYPE, pasteHandler, element);
}
function getSelectionStart() {
    return this.domElement.selectionStart;
}
function getSelectionEnd() {
    return this.domElement.selectionEnd;
}
function setSelectionStart(selectionStart) {
    this.domElement.selectionStart = selectionStart;
}
function setSelectionEnd(selectionEnd) {
    this.domElement.selectionEnd = selectionEnd;
}
function select() {
    this.domElement.select();
}
var selectionMixins = {
    onCut: onCut,
    offCut: offCut,
    onCopy: onCopy,
    offCopy: offCopy,
    onPaste: onPaste,
    offPaste: offPaste,
    getSelectionStart: getSelectionStart,
    getSelectionEnd: getSelectionEnd,
    setSelectionStart: setSelectionStart,
    setSelectionEnd: setSelectionEnd,
    select: select
};
var _default = selectionMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvc2VsZWN0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBDVVRfRVZFTlRfVFlQRSwgQ09QWV9FVkVOVF9UWVBFLCBQQVNURV9FVkVOVF9UWVBFIH0gZnJvbSBcIi4uL2V2ZW50VHlwZXNcIjtcblxuZnVuY3Rpb24gb25DdXQoY3V0SGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9uRXZlbnQoQ1VUX0VWRU5UX1RZUEUsIGN1dEhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9mZkN1dChjdXRIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub2ZmRXZlbnQoQ1VUX0VWRU5UX1RZUEUsIGN1dEhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9uQ29weShjb3B5SGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9uRXZlbnQoQ09QWV9FVkVOVF9UWVBFLCBjb3B5SGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb2ZmQ29weShjb3B5SGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZkV2ZW50KENPUFlfRVZFTlRfVFlQRSwgY29weUhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9uUGFzdGUocGFzdGVIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub25FdmVudChQQVNURV9FVkVOVF9UWVBFLCBwYXN0ZUhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9mZlBhc3RlKHBhc3RlSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZkV2ZW50KFBBU1RFX0VWRU5UX1RZUEUsIHBhc3RlSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gZ2V0U2VsZWN0aW9uU3RhcnQoKSB7IHJldHVybiB0aGlzLmRvbUVsZW1lbnQuc2VsZWN0aW9uU3RhcnQ7IH1cblxuZnVuY3Rpb24gZ2V0U2VsZWN0aW9uRW5kKCkgeyByZXR1cm4gdGhpcy5kb21FbGVtZW50LnNlbGVjdGlvbkVuZDsgfVxuXG5mdW5jdGlvbiBzZXRTZWxlY3Rpb25TdGFydChzZWxlY3Rpb25TdGFydCkgeyB0aGlzLmRvbUVsZW1lbnQuc2VsZWN0aW9uU3RhcnQgPSBzZWxlY3Rpb25TdGFydDsgfVxuXG5mdW5jdGlvbiBzZXRTZWxlY3Rpb25FbmQoc2VsZWN0aW9uRW5kKSB7IHRoaXMuZG9tRWxlbWVudC5zZWxlY3Rpb25FbmQgPSBzZWxlY3Rpb25FbmQ7IH1cblxuZnVuY3Rpb24gc2VsZWN0KCkgeyB0aGlzLmRvbUVsZW1lbnQuc2VsZWN0KCk7IH1cblxuY29uc3Qgc2VsZWN0aW9uTWl4aW5zID0ge1xuICBvbkN1dCxcbiAgb2ZmQ3V0LFxuICBvbkNvcHksXG4gIG9mZkNvcHksXG4gIG9uUGFzdGUsXG4gIG9mZlBhc3RlLFxuICBnZXRTZWxlY3Rpb25TdGFydCxcbiAgZ2V0U2VsZWN0aW9uRW5kLFxuICBzZXRTZWxlY3Rpb25TdGFydCxcbiAgc2V0U2VsZWN0aW9uRW5kLFxuICBzZWxlY3Rcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHNlbGVjdGlvbk1peGlucztcbiJdLCJuYW1lcyI6WyJvbkN1dCIsImN1dEhhbmRsZXIiLCJlbGVtZW50Iiwib25FdmVudCIsIkNVVF9FVkVOVF9UWVBFIiwib2ZmQ3V0Iiwib2ZmRXZlbnQiLCJvbkNvcHkiLCJjb3B5SGFuZGxlciIsIkNPUFlfRVZFTlRfVFlQRSIsIm9mZkNvcHkiLCJvblBhc3RlIiwicGFzdGVIYW5kbGVyIiwiUEFTVEVfRVZFTlRfVFlQRSIsIm9mZlBhc3RlIiwiZ2V0U2VsZWN0aW9uU3RhcnQiLCJkb21FbGVtZW50Iiwic2VsZWN0aW9uU3RhcnQiLCJnZXRTZWxlY3Rpb25FbmQiLCJzZWxlY3Rpb25FbmQiLCJzZXRTZWxlY3Rpb25TdGFydCIsInNldFNlbGVjdGlvbkVuZCIsInNlbGVjdCIsInNlbGVjdGlvbk1peGlucyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBd0NBOzs7ZUFBQTs7OzBCQXRDa0U7QUFFbEUsU0FBU0EsTUFBTUMsVUFBVSxFQUFFQyxPQUFPO0lBQUksSUFBSSxDQUFDQyxPQUFPLENBQUNDLDBCQUFjLEVBQUVILFlBQVlDO0FBQVU7QUFFekYsU0FBU0csT0FBT0osVUFBVSxFQUFFQyxPQUFPO0lBQUksSUFBSSxDQUFDSSxRQUFRLENBQUNGLDBCQUFjLEVBQUVILFlBQVlDO0FBQVU7QUFFM0YsU0FBU0ssT0FBT0MsV0FBVyxFQUFFTixPQUFPO0lBQUksSUFBSSxDQUFDQyxPQUFPLENBQUNNLDJCQUFlLEVBQUVELGFBQWFOO0FBQVU7QUFFN0YsU0FBU1EsUUFBUUYsV0FBVyxFQUFFTixPQUFPO0lBQUksSUFBSSxDQUFDSSxRQUFRLENBQUNHLDJCQUFlLEVBQUVELGFBQWFOO0FBQVU7QUFFL0YsU0FBU1MsUUFBUUMsWUFBWSxFQUFFVixPQUFPO0lBQUksSUFBSSxDQUFDQyxPQUFPLENBQUNVLDRCQUFnQixFQUFFRCxjQUFjVjtBQUFVO0FBRWpHLFNBQVNZLFNBQVNGLFlBQVksRUFBRVYsT0FBTztJQUFJLElBQUksQ0FBQ0ksUUFBUSxDQUFDTyw0QkFBZ0IsRUFBRUQsY0FBY1Y7QUFBVTtBQUVuRyxTQUFTYTtJQUFzQixPQUFPLElBQUksQ0FBQ0MsVUFBVSxDQUFDQyxjQUFjO0FBQUU7QUFFdEUsU0FBU0M7SUFBb0IsT0FBTyxJQUFJLENBQUNGLFVBQVUsQ0FBQ0csWUFBWTtBQUFFO0FBRWxFLFNBQVNDLGtCQUFrQkgsY0FBYztJQUFJLElBQUksQ0FBQ0QsVUFBVSxDQUFDQyxjQUFjLEdBQUdBO0FBQWdCO0FBRTlGLFNBQVNJLGdCQUFnQkYsWUFBWTtJQUFJLElBQUksQ0FBQ0gsVUFBVSxDQUFDRyxZQUFZLEdBQUdBO0FBQWM7QUFFdEYsU0FBU0c7SUFBVyxJQUFJLENBQUNOLFVBQVUsQ0FBQ00sTUFBTTtBQUFJO0FBRTlDLElBQU1DLGtCQUFrQjtJQUN0QnZCLE9BQUFBO0lBQ0FLLFFBQUFBO0lBQ0FFLFFBQUFBO0lBQ0FHLFNBQUFBO0lBQ0FDLFNBQUFBO0lBQ0FHLFVBQUFBO0lBQ0FDLG1CQUFBQTtJQUNBRyxpQkFBQUE7SUFDQUUsbUJBQUFBO0lBQ0FDLGlCQUFBQTtJQUNBQyxRQUFBQTtBQUNGO0lBRUEsV0FBZUMifQ==