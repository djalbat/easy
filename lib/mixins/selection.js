"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _eventTypes = require("../eventTypes");
function onCut(cutHandler, element) {
    this.onEvent(_eventTypes.CUT_EVENT_TYPE, cutHandler, element);
}
function offCut(cutHandler, element) {
    this.offEvent(_eventTypes.CUT_EVENT_TYPE, cutHandler, element);
}
function onCopy(copyHandler, element) {
    this.onEvent(_eventTypes.COPY_EVENT_TYPE, copyHandler, element);
}
function offCopy(copyHandler, element) {
    this.offEvent(_eventTypes.COPY_EVENT_TYPE, copyHandler, element);
}
function onPaste(pasteHandler, element) {
    this.onEvent(_eventTypes.PASTE_EVENT_TYPE, pasteHandler, element);
}
function offPaste(pasteHandler, element) {
    this.offEvent(_eventTypes.PASTE_EVENT_TYPE, pasteHandler, element);
}
function onSelectionChange(selectionChangeHandler, element) {
    this.onEvent(_eventTypes.SELECTIONCHANGE_EVENT_TYPE, selectionChangeHandler, element);
}
function offSelectionChange(selectionChangeHandler, element) {
    this.offEvent(_eventTypes.SELECTIONCHANGE_EVENT_TYPE, selectionChangeHandler, element);
}
function createEventListener(eventType, handler, element) {
    var _this = this;
    var eventListener;
    var handlerElement = element; ///
    eventListener = function(event) {
        if (eventType === _eventTypes.SELECTIONCHANGE_EVENT_TYPE) {
            var domElement = handlerElement.domElement, currentTarget = event.currentTarget, activeElement = currentTarget.activeElement;
            if (domElement !== activeElement) {
                return;
            }
        }
        var _$element = _this; ///
        handler.call(handlerElement, event, _$element);
    };
    Object.assign(eventListener, {
        element: element,
        handler: handler,
        eventType: eventType
    });
    return eventListener;
}
function getSelectionStart() {
    return this.domElement.selectionStart;
}
function getSelectionEnd() {
    return this.domElement.selectionEnd;
}
function setSelectionStart(selectionStart) {
    this.domElement.selectionStart = selectionStart;
}
function setSelectionEnd(selectionEnd) {
    this.domElement.selectionEnd = selectionEnd;
}
function select() {
    this.domElement.select();
}
var selectionMixins = {
    onCut: onCut,
    offCut: offCut,
    onCopy: onCopy,
    offCopy: offCopy,
    onPaste: onPaste,
    offPaste: offPaste,
    onSelectionChange: onSelectionChange,
    offSelectionChange: offSelectionChange,
    createEventListener: createEventListener,
    getSelectionStart: getSelectionStart,
    getSelectionEnd: getSelectionEnd,
    setSelectionStart: setSelectionStart,
    setSelectionEnd: setSelectionEnd,
    select: select
};
var _default = selectionMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvc2VsZWN0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBDVVRfRVZFTlRfVFlQRSwgQ09QWV9FVkVOVF9UWVBFLCBQQVNURV9FVkVOVF9UWVBFLCBTRUxFQ1RJT05DSEFOR0VfRVZFTlRfVFlQRSB9IGZyb20gXCIuLi9ldmVudFR5cGVzXCI7XG5cbmZ1bmN0aW9uIG9uQ3V0KGN1dEhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vbkV2ZW50KENVVF9FVkVOVF9UWVBFLCBjdXRIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZDdXQoY3V0SGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZkV2ZW50KENVVF9FVkVOVF9UWVBFLCBjdXRIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvbkNvcHkoY29weUhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vbkV2ZW50KENPUFlfRVZFTlRfVFlQRSwgY29weUhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9mZkNvcHkoY29weUhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmZFdmVudChDT1BZX0VWRU5UX1RZUEUsIGNvcHlIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvblBhc3RlKHBhc3RlSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9uRXZlbnQoUEFTVEVfRVZFTlRfVFlQRSwgcGFzdGVIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZQYXN0ZShwYXN0ZUhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmZFdmVudChQQVNURV9FVkVOVF9UWVBFLCBwYXN0ZUhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9uU2VsZWN0aW9uQ2hhbmdlKHNlbGVjdGlvbkNoYW5nZUhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vbkV2ZW50KFNFTEVDVElPTkNIQU5HRV9FVkVOVF9UWVBFLCBzZWxlY3Rpb25DaGFuZ2VIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZTZWxlY3Rpb25DaGFuZ2Uoc2VsZWN0aW9uQ2hhbmdlSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZkV2ZW50KFNFTEVDVElPTkNIQU5HRV9FVkVOVF9UWVBFLCBzZWxlY3Rpb25DaGFuZ2VIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBjcmVhdGVFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlciwgZWxlbWVudCkge1xuICBsZXQgZXZlbnRMaXN0ZW5lcjtcblxuICBjb25zdCBoYW5kbGVyRWxlbWVudCA9IGVsZW1lbnQ7IC8vL1xuXG4gIGV2ZW50TGlzdGVuZXIgPSAoZXZlbnQpID0+IHtcbiAgICBpZiAoZXZlbnRUeXBlID09PSBTRUxFQ1RJT05DSEFOR0VfRVZFTlRfVFlQRSkge1xuICAgICAgY29uc3QgeyBkb21FbGVtZW50IH0gPSBoYW5kbGVyRWxlbWVudCxcbiAgICAgICAgICAgIHsgY3VycmVudFRhcmdldCB9ID0gZXZlbnQsXG4gICAgICAgICAgICB7IGFjdGl2ZUVsZW1lbnQgfSA9IGN1cnJlbnRUYXJnZXQ7XG5cbiAgICAgIGlmIChkb21FbGVtZW50ICE9PSBhY3RpdmVFbGVtZW50KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBlbGVtZW50ID0gdGhpczsgLy8vXG5cbiAgICBoYW5kbGVyLmNhbGwoaGFuZGxlckVsZW1lbnQsIGV2ZW50LCBlbGVtZW50KTtcbiAgfTtcblxuICBPYmplY3QuYXNzaWduKGV2ZW50TGlzdGVuZXIsIHtcbiAgICBlbGVtZW50LFxuICAgIGhhbmRsZXIsXG4gICAgZXZlbnRUeXBlXG4gIH0pO1xuXG4gIHJldHVybiBldmVudExpc3RlbmVyO1xufVxuXG5mdW5jdGlvbiBnZXRTZWxlY3Rpb25TdGFydCgpIHsgcmV0dXJuIHRoaXMuZG9tRWxlbWVudC5zZWxlY3Rpb25TdGFydDsgfVxuXG5mdW5jdGlvbiBnZXRTZWxlY3Rpb25FbmQoKSB7IHJldHVybiB0aGlzLmRvbUVsZW1lbnQuc2VsZWN0aW9uRW5kOyB9XG5cbmZ1bmN0aW9uIHNldFNlbGVjdGlvblN0YXJ0KHNlbGVjdGlvblN0YXJ0KSB7IHRoaXMuZG9tRWxlbWVudC5zZWxlY3Rpb25TdGFydCA9IHNlbGVjdGlvblN0YXJ0OyB9XG5cbmZ1bmN0aW9uIHNldFNlbGVjdGlvbkVuZChzZWxlY3Rpb25FbmQpIHsgdGhpcy5kb21FbGVtZW50LnNlbGVjdGlvbkVuZCA9IHNlbGVjdGlvbkVuZDsgfVxuXG5mdW5jdGlvbiBzZWxlY3QoKSB7IHRoaXMuZG9tRWxlbWVudC5zZWxlY3QoKTsgfVxuXG5jb25zdCBzZWxlY3Rpb25NaXhpbnMgPSB7XG4gIG9uQ3V0LFxuICBvZmZDdXQsXG4gIG9uQ29weSxcbiAgb2ZmQ29weSxcbiAgb25QYXN0ZSxcbiAgb2ZmUGFzdGUsXG4gIG9uU2VsZWN0aW9uQ2hhbmdlLFxuICBvZmZTZWxlY3Rpb25DaGFuZ2UsXG4gIGNyZWF0ZUV2ZW50TGlzdGVuZXIsXG4gIGdldFNlbGVjdGlvblN0YXJ0LFxuICBnZXRTZWxlY3Rpb25FbmQsXG4gIHNldFNlbGVjdGlvblN0YXJ0LFxuICBzZXRTZWxlY3Rpb25FbmQsXG4gIHNlbGVjdFxufTtcblxuZXhwb3J0IGRlZmF1bHQgc2VsZWN0aW9uTWl4aW5zO1xuIl0sIm5hbWVzIjpbIm9uQ3V0IiwiY3V0SGFuZGxlciIsImVsZW1lbnQiLCJvbkV2ZW50IiwiQ1VUX0VWRU5UX1RZUEUiLCJvZmZDdXQiLCJvZmZFdmVudCIsIm9uQ29weSIsImNvcHlIYW5kbGVyIiwiQ09QWV9FVkVOVF9UWVBFIiwib2ZmQ29weSIsIm9uUGFzdGUiLCJwYXN0ZUhhbmRsZXIiLCJQQVNURV9FVkVOVF9UWVBFIiwib2ZmUGFzdGUiLCJvblNlbGVjdGlvbkNoYW5nZSIsInNlbGVjdGlvbkNoYW5nZUhhbmRsZXIiLCJTRUxFQ1RJT05DSEFOR0VfRVZFTlRfVFlQRSIsIm9mZlNlbGVjdGlvbkNoYW5nZSIsImNyZWF0ZUV2ZW50TGlzdGVuZXIiLCJldmVudFR5cGUiLCJoYW5kbGVyIiwiZXZlbnRMaXN0ZW5lciIsImhhbmRsZXJFbGVtZW50IiwiZXZlbnQiLCJkb21FbGVtZW50IiwiY3VycmVudFRhcmdldCIsImFjdGl2ZUVsZW1lbnQiLCJjYWxsIiwiT2JqZWN0IiwiYXNzaWduIiwiZ2V0U2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsImdldFNlbGVjdGlvbkVuZCIsInNlbGVjdGlvbkVuZCIsInNldFNlbGVjdGlvblN0YXJ0Iiwic2V0U2VsZWN0aW9uRW5kIiwic2VsZWN0Iiwic2VsZWN0aW9uTWl4aW5zIl0sIm1hcHBpbmdzIjoiQUFBQTs7OzsrQkE2RUE7OztlQUFBOzs7MEJBM0U4RjtBQUU5RixTQUFTQSxNQUFNQyxVQUFVLEVBQUVDLE9BQU87SUFBSSxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsMEJBQWMsRUFBRUgsWUFBWUM7QUFBVTtBQUV6RixTQUFTRyxPQUFPSixVQUFVLEVBQUVDLE9BQU87SUFBSSxJQUFJLENBQUNJLFFBQVEsQ0FBQ0YsMEJBQWMsRUFBRUgsWUFBWUM7QUFBVTtBQUUzRixTQUFTSyxPQUFPQyxXQUFXLEVBQUVOLE9BQU87SUFBSSxJQUFJLENBQUNDLE9BQU8sQ0FBQ00sMkJBQWUsRUFBRUQsYUFBYU47QUFBVTtBQUU3RixTQUFTUSxRQUFRRixXQUFXLEVBQUVOLE9BQU87SUFBSSxJQUFJLENBQUNJLFFBQVEsQ0FBQ0csMkJBQWUsRUFBRUQsYUFBYU47QUFBVTtBQUUvRixTQUFTUyxRQUFRQyxZQUFZLEVBQUVWLE9BQU87SUFBSSxJQUFJLENBQUNDLE9BQU8sQ0FBQ1UsNEJBQWdCLEVBQUVELGNBQWNWO0FBQVU7QUFFakcsU0FBU1ksU0FBU0YsWUFBWSxFQUFFVixPQUFPO0lBQUksSUFBSSxDQUFDSSxRQUFRLENBQUNPLDRCQUFnQixFQUFFRCxjQUFjVjtBQUFVO0FBRW5HLFNBQVNhLGtCQUFrQkMsc0JBQXNCLEVBQUVkLE9BQU87SUFBSSxJQUFJLENBQUNDLE9BQU8sQ0FBQ2Msc0NBQTBCLEVBQUVELHdCQUF3QmQ7QUFBVTtBQUV6SSxTQUFTZ0IsbUJBQW1CRixzQkFBc0IsRUFBRWQsT0FBTztJQUFJLElBQUksQ0FBQ0ksUUFBUSxDQUFDVyxzQ0FBMEIsRUFBRUQsd0JBQXdCZDtBQUFVO0FBRTNJLFNBQVNpQixvQkFBb0JDLFNBQVMsRUFBRUMsT0FBTyxFQUFFbkIsT0FBTzs7SUFDdEQsSUFBSW9CO0lBRUosSUFBTUMsaUJBQWlCckIsU0FBUyxHQUFHO0lBRW5Db0IsZ0JBQWdCLFNBQUNFO1FBQ2YsSUFBSUosY0FBY0gsc0NBQTBCLEVBQUU7WUFDNUMsSUFBTSxBQUFFUSxhQUFlRixlQUFmRSxZQUNGLEFBQUVDLGdCQUFrQkYsTUFBbEJFLGVBQ0YsQUFBRUMsZ0JBQWtCRCxjQUFsQkM7WUFFUixJQUFJRixlQUFlRSxlQUFlO2dCQUNoQztZQUNGO1FBQ0Y7UUFFQSxJQUFNekIsbUJBQWdCLEdBQUc7UUFFekJtQixRQUFRTyxJQUFJLENBQUNMLGdCQUFnQkMsT0FBT3RCO0lBQ3RDO0lBRUEyQixPQUFPQyxNQUFNLENBQUNSLGVBQWU7UUFDM0JwQixTQUFBQTtRQUNBbUIsU0FBQUE7UUFDQUQsV0FBQUE7SUFDRjtJQUVBLE9BQU9FO0FBQ1Q7QUFFQSxTQUFTUztJQUFzQixPQUFPLElBQUksQ0FBQ04sVUFBVSxDQUFDTyxjQUFjO0FBQUU7QUFFdEUsU0FBU0M7SUFBb0IsT0FBTyxJQUFJLENBQUNSLFVBQVUsQ0FBQ1MsWUFBWTtBQUFFO0FBRWxFLFNBQVNDLGtCQUFrQkgsY0FBYztJQUFJLElBQUksQ0FBQ1AsVUFBVSxDQUFDTyxjQUFjLEdBQUdBO0FBQWdCO0FBRTlGLFNBQVNJLGdCQUFnQkYsWUFBWTtJQUFJLElBQUksQ0FBQ1QsVUFBVSxDQUFDUyxZQUFZLEdBQUdBO0FBQWM7QUFFdEYsU0FBU0c7SUFBVyxJQUFJLENBQUNaLFVBQVUsQ0FBQ1ksTUFBTTtBQUFJO0FBRTlDLElBQU1DLGtCQUFrQjtJQUN0QnRDLE9BQUFBO0lBQ0FLLFFBQUFBO0lBQ0FFLFFBQUFBO0lBQ0FHLFNBQUFBO0lBQ0FDLFNBQUFBO0lBQ0FHLFVBQUFBO0lBQ0FDLG1CQUFBQTtJQUNBRyxvQkFBQUE7SUFDQUMscUJBQUFBO0lBQ0FZLG1CQUFBQTtJQUNBRSxpQkFBQUE7SUFDQUUsbUJBQUFBO0lBQ0FDLGlCQUFBQTtJQUNBQyxRQUFBQTtBQUNGO0lBRUEsV0FBZUMifQ==